{"version":3,"file":"static/js/459.dc00223d.chunk.js","mappings":"+PACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAsF,sBAAtF,EAAwH,wB,SCsDxH,EAjDa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBN,GAAW,GADQ,mBAGMO,EAAAA,EAAAA,IAAgBJ,GAHtB,gBAGTK,EAHS,EAGTA,KACRV,EAAUU,GAJO,gDAMjBN,EAAS,KAAMO,SANE,yBAQjBT,GAAW,GARM,4EAAH,qDAWlBM,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAW,SAACW,EAAA,EAAD,IACXT,IAAS,uBAAG,0BACb,eAAIU,UAAWC,EAAf,SACGf,EAAOgB,KAAI,SAAAC,GAAK,OACf,gBAAIH,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXG,MAAM,QACNC,IACEF,EAAMG,aACFC,EAAAA,GAAYJ,EAAMG,aADtB,0DAIFE,IAAKL,EAAMM,iBAEb,iBAAKT,UAAWC,EAAhB,WACE,uBAAIE,EAAMO,QACV,yBAAG,cAAYP,EAAMQ,kBAbYR,EAAMS,GAD5B,QAqBxB,C,8MCnDKC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDX,EAAY,kCAEZY,EAAkB,mCAAG,sGACTN,EAASO,IAAI,uBADJ,uBACxBC,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,qDAKlBC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAI,eAAgB,CAClDJ,OAAQ,CACNQ,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBF,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZK,EAAiB,mCAAG,WAAMd,GAAN,yFACRC,EAASO,IAAT,gBAAsBR,IADd,uBACvBS,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBzB,EAAe,mCAAG,WAAMgB,GAAN,yFACNC,EAASO,IAAT,gBAAsBR,EAAtB,aADM,uBACrBS,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAiB,mCAAG,WAAMf,GAAN,yFACRC,EAASO,IAAT,gBAAsBR,EAAtB,aADQ,uBACvBS,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"listItem\":\"Cast_listItem__2rNHA\",\"listImg\":\"Cast_listImg__i57oh\",\"extraInfo\":\"Cast_extraInfo__M3H1G\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCasts, IMAGE_URL } from 'service/api';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      setLoading(true);\n      try {\n        const { cast } = await fetchMovieCasts(movieId);\n        setActors(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>Something goes wrong</p>}\n      <ul className={styles.list}>\n        {actors.map(actor => (\n          <li className={styles.listItem} key={actor.id}>\n            <img\n              className={styles.listImg}\n              width=\"200px\"\n              src={\n                actor.profile_path\n                  ? IMAGE_URL + actor.profile_path\n                  : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n              }\n              alt={actor.original_name}\n            />\n            <div className={styles.extraInfo}>\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '0680db411350b9d223e12287a60e3b59',\n    language: 'en-US',\n  },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovie = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCasts = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","actors","setActors","loading","setLoading","error","setError","movieId","useParams","useEffect","getMovieCast","fetchMovieCasts","cast","message","Loader","className","styles","map","actor","width","src","profile_path","IMAGE_URL","alt","original_name","name","character","id","instance","axios","baseURL","params","api_key","language","fetchTrendingMovie","get","data","searchMovies","query","page","include_adult","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}